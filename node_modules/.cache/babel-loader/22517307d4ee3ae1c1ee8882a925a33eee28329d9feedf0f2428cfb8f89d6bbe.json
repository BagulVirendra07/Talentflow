{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viren\\\\Trial 2\\\\src\\\\components\\\\Assessments\\\\Builder.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Dexie from \"dexie\";\nimport AssessmentPreview from \"./Preview\";\n\n// ✅ Create local IndexedDB\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = new Dexie(\"TalentFlowDB\");\ndb.version(1).stores({\n  assessments: \"++id, title, sections\"\n});\n\n// ⚙️ Simulate latency & 5–10% random error\nconst simulateNetwork = async () => {\n  const delay = Math.random() * (1200 - 200) + 200;\n  await new Promise(res => setTimeout(res, delay));\n  if (Math.random() < 0.1) throw new Error(\"Network error! Try again.\");\n};\nexport default function Builder() {\n  _s();\n  var _assessment$sections$;\n  const [assessment, setAssessment] = useState({\n    title: \"New Assessment\",\n    sections: [{\n      id: Date.now(),\n      name: \"Section 1\",\n      questions: []\n    }]\n  });\n  const [selectedSection, setSelectedSection] = useState(0);\n  const [sectionName, setSectionName] = useState(\"\");\n  const [status, setStatus] = useState(\"\");\n  const [error, setError] = useState(\"\");\n\n  // 🧩 Load data from IndexedDB on mount\n  useEffect(() => {\n    const load = async () => {\n      const data = await db.assessments.toArray();\n      if (data.length > 0) setAssessment(data[data.length - 1]);\n    };\n    load();\n  }, []);\n\n  // 💾 Auto-save to IndexedDB whenever assessment changes\n  useEffect(() => {\n    const saveToDB = async () => {\n      try {\n        setStatus(\"Saving...\");\n        await simulateNetwork();\n        await db.assessments.put(assessment);\n        setStatus(\"✅ Saved locally\");\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setTimeout(() => setStatus(\"\"), 2000);\n      }\n    };\n    saveToDB();\n  }, [assessment]);\n\n  // ➕ Add new section\n  const addSection = () => {\n    if (!sectionName.trim()) return alert(\"Please enter a section name!\");\n    setAssessment(prev => ({\n      ...prev,\n      sections: [...prev.sections, {\n        id: Date.now(),\n        name: sectionName,\n        questions: []\n      }]\n    }));\n    setSectionName(\"\");\n  };\n\n  // ➕ Add question\n  const addQuestion = type => {\n    const q = {\n      id: \"q\" + Date.now(),\n      type,\n      label: \"New \" + type + \" question\",\n      required: false,\n      maxLength: type === \"long\" ? 500 : 100,\n      range: type === \"numeric\" ? {\n        min: 0,\n        max: 100\n      } : null,\n      options: [\"Option 1\", \"Option 2\"],\n      condition: {\n        dependsOn: \"\",\n        value: \"\"\n      }\n    };\n    const clone = {\n      ...assessment\n    };\n    clone.sections[selectedSection].questions.push(q);\n    setAssessment(clone);\n  };\n\n  // ✏️ Update question\n  const updateQuestion = (secIdx, qIdx, field, value) => {\n    const clone = {\n      ...assessment\n    };\n    clone.sections[secIdx].questions[qIdx][field] = value;\n    setAssessment(clone);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col md:flex-row gap-6 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:w-1/2 bg-white rounded-2xl shadow-lg p-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-2xl font-bold\",\n          children: \"\\uD83E\\uDDE9 Assessment Builder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), status && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm text-green-600\",\n          children: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-red-600\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-gray-600 mb-1\",\n        children: \"Assessment Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"border p-2 rounded w-full mb-4\",\n        value: assessment.title,\n        onChange: e => setAssessment({\n          ...assessment,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex gap-2 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"New section name\",\n          className: \"border p-2 rounded w-full\",\n          value: sectionName,\n          onChange: e => setSectionName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addSection,\n          className: \"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700\",\n          children: \"\\u2795 Add Section\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-2\",\n        children: assessment.sections.map((s, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => setSelectedSection(idx),\n          className: `border rounded p-3 cursor-pointer transition ${selectedSection === idx ? \"bg-blue-100 border-blue-400\" : \"bg-gray-50 hover:bg-gray-100\"}`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-semibold\",\n            children: s.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm text-gray-500\",\n            children: [s.questions.length, \" Questions\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this)]\n        }, s.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Add Question Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this), [\"short\", \"long\", \"single-choice\", \"multi-choice\", \"numeric\", \"file\"].map(t => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addQuestion(t),\n          className: \"border p-1 px-2 m-1 rounded hover:bg-gray-100\",\n          children: t\n        }, t, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), ((_assessment$sections$ = assessment.sections[selectedSection]) === null || _assessment$sections$ === void 0 ? void 0 : _assessment$sections$.questions.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 border-t pt-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold mb-2\",\n          children: \"Edit Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 13\n        }, this), assessment.sections[selectedSection].questions.map((q, qi) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border p-2 mb-2 rounded bg-gray-50 space-y-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"border p-1 w-full rounded\",\n            value: q.label,\n            onChange: e => updateQuestion(selectedSection, qi, \"label\", e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), q.type.includes(\"choice\") && /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"border p-1 w-full rounded text-sm\",\n            rows: 2,\n            value: q.options.join(\"\\n\"),\n            onChange: e => updateQuestion(selectedSection, qi, \"options\", e.target.value.split(\"\\n\"))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 19\n          }, this), q.type === \"numeric\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"border p-1 rounded w-1/2\",\n              value: q.range.min,\n              onChange: e => updateQuestion(selectedSection, qi, \"range\", {\n                ...q.range,\n                min: +e.target.value\n              }),\n              placeholder: \"Min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"border p-1 rounded w-1/2\",\n              value: q.range.max,\n              onChange: e => updateQuestion(selectedSection, qi, \"range\", {\n                ...q.range,\n                max: +e.target.value\n              }),\n              placeholder: \"Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex gap-2 items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"text-sm\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: q.required,\n                onChange: e => updateQuestion(selectedSection, qi, \"required\", e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 21\n              }, this), \" \", \"Required\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 19\n            }, this), q.type === \"long\" && /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              className: \"border p-1 w-24 rounded\",\n              value: q.maxLength,\n              onChange: e => updateQuestion(selectedSection, qi, \"maxLength\", +e.target.value),\n              placeholder: \"Max length\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-sm\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Show only if question ID = \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"border p-1 w-24 rounded\",\n              value: q.condition.dependsOn,\n              onChange: e => updateQuestion(selectedSection, qi, \"condition\", {\n                ...q.condition,\n                dependsOn: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \" equals \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"border p-1 w-24 rounded\",\n              value: q.condition.value,\n              onChange: e => updateQuestion(selectedSection, qi, \"condition\", {\n                ...q.condition,\n                value: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 17\n          }, this)]\n        }, q.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"md:w-1/2 bg-gray-50 rounded-2xl shadow-lg p-5\",\n      children: /*#__PURE__*/_jsxDEV(AssessmentPreview, {\n        assessment: assessment\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(Builder, \"rZA2b4DT3bgK4EFjvMbF11DfC+s=\");\n_c = Builder;\nvar _c;\n$RefreshReg$(_c, \"Builder\");","map":{"version":3,"names":["React","useState","useEffect","Dexie","AssessmentPreview","jsxDEV","_jsxDEV","db","version","stores","assessments","simulateNetwork","delay","Math","random","Promise","res","setTimeout","Error","Builder","_s","_assessment$sections$","assessment","setAssessment","title","sections","id","Date","now","name","questions","selectedSection","setSelectedSection","sectionName","setSectionName","status","setStatus","error","setError","load","data","toArray","length","saveToDB","put","err","message","addSection","trim","alert","prev","addQuestion","type","q","label","required","maxLength","range","min","max","options","condition","dependsOn","value","clone","push","updateQuestion","secIdx","qIdx","field","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","placeholder","onClick","map","s","idx","t","qi","includes","rows","join","split","checked","_c","$RefreshReg$"],"sources":["C:/Users/viren/Trial 2/src/components/Assessments/Builder.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Dexie from \"dexie\";\r\nimport AssessmentPreview from \"./Preview\";\r\n\r\n// ✅ Create local IndexedDB\r\nconst db = new Dexie(\"TalentFlowDB\");\r\ndb.version(1).stores({\r\n  assessments: \"++id, title, sections\",\r\n});\r\n\r\n// ⚙️ Simulate latency & 5–10% random error\r\nconst simulateNetwork = async () => {\r\n  const delay = Math.random() * (1200 - 200) + 200;\r\n  await new Promise((res) => setTimeout(res, delay));\r\n  if (Math.random() < 0.1) throw new Error(\"Network error! Try again.\");\r\n};\r\n\r\nexport default function Builder() {\r\n  const [assessment, setAssessment] = useState({\r\n    title: \"New Assessment\",\r\n    sections: [{ id: Date.now(), name: \"Section 1\", questions: [] }],\r\n  });\r\n  const [selectedSection, setSelectedSection] = useState(0);\r\n  const [sectionName, setSectionName] = useState(\"\");\r\n  const [status, setStatus] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // 🧩 Load data from IndexedDB on mount\r\n  useEffect(() => {\r\n    const load = async () => {\r\n      const data = await db.assessments.toArray();\r\n      if (data.length > 0) setAssessment(data[data.length - 1]);\r\n    };\r\n    load();\r\n  }, []);\r\n\r\n  // 💾 Auto-save to IndexedDB whenever assessment changes\r\n  useEffect(() => {\r\n    const saveToDB = async () => {\r\n      try {\r\n        setStatus(\"Saving...\");\r\n        await simulateNetwork();\r\n        await db.assessments.put(assessment);\r\n        setStatus(\"✅ Saved locally\");\r\n      } catch (err) {\r\n        setError(err.message);\r\n      } finally {\r\n        setTimeout(() => setStatus(\"\"), 2000);\r\n      }\r\n    };\r\n    saveToDB();\r\n  }, [assessment]);\r\n\r\n  // ➕ Add new section\r\n  const addSection = () => {\r\n    if (!sectionName.trim()) return alert(\"Please enter a section name!\");\r\n    setAssessment((prev) => ({\r\n      ...prev,\r\n      sections: [\r\n        ...prev.sections,\r\n        { id: Date.now(), name: sectionName, questions: [] },\r\n      ],\r\n    }));\r\n    setSectionName(\"\");\r\n  };\r\n\r\n  // ➕ Add question\r\n  const addQuestion = (type) => {\r\n    const q = {\r\n      id: \"q\" + Date.now(),\r\n      type,\r\n      label: \"New \" + type + \" question\",\r\n      required: false,\r\n      maxLength: type === \"long\" ? 500 : 100,\r\n      range: type === \"numeric\" ? { min: 0, max: 100 } : null,\r\n      options: [\"Option 1\", \"Option 2\"],\r\n      condition: { dependsOn: \"\", value: \"\" },\r\n    };\r\n\r\n    const clone = { ...assessment };\r\n    clone.sections[selectedSection].questions.push(q);\r\n    setAssessment(clone);\r\n  };\r\n\r\n  // ✏️ Update question\r\n  const updateQuestion = (secIdx, qIdx, field, value) => {\r\n    const clone = { ...assessment };\r\n    clone.sections[secIdx].questions[qIdx][field] = value;\r\n    setAssessment(clone);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex flex-col md:flex-row gap-6 p-6\">\r\n      {/* Left panel – builder */}\r\n      <div className=\"md:w-1/2 bg-white rounded-2xl shadow-lg p-5\">\r\n        <div className=\"flex justify-between items-center mb-3\">\r\n          <h2 className=\"text-2xl font-bold\">🧩 Assessment Builder</h2>\r\n          {status && <span className=\"text-sm text-green-600\">{status}</span>}\r\n        </div>\r\n        {error && <p className=\"text-red-600\">{error}</p>}\r\n\r\n        {/* Assessment Title */}\r\n        <label className=\"block text-gray-600 mb-1\">Assessment Title</label>\r\n        <input\r\n          className=\"border p-2 rounded w-full mb-4\"\r\n          value={assessment.title}\r\n          onChange={(e) =>\r\n            setAssessment({ ...assessment, title: e.target.value })\r\n          }\r\n        />\r\n\r\n        {/* Add Section */}\r\n        <div className=\"flex gap-2 mb-4\">\r\n          <input\r\n            placeholder=\"New section name\"\r\n            className=\"border p-2 rounded w-full\"\r\n            value={sectionName}\r\n            onChange={(e) => setSectionName(e.target.value)}\r\n          />\r\n          <button\r\n            onClick={addSection}\r\n            className=\"bg-blue-600 text-white px-3 py-1 rounded hover:bg-blue-700\"\r\n          >\r\n            ➕ Add Section\r\n          </button>\r\n        </div>\r\n\r\n        {/* Section List */}\r\n        <div className=\"space-y-2\">\r\n          {assessment.sections.map((s, idx) => (\r\n            <div\r\n              key={s.id}\r\n              onClick={() => setSelectedSection(idx)}\r\n              className={`border rounded p-3 cursor-pointer transition ${\r\n                selectedSection === idx\r\n                  ? \"bg-blue-100 border-blue-400\"\r\n                  : \"bg-gray-50 hover:bg-gray-100\"\r\n              }`}\r\n            >\r\n              <div className=\"font-semibold\">{s.name}</div>\r\n              <div className=\"text-sm text-gray-500\">\r\n                {s.questions.length} Questions\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Question types */}\r\n        <div className=\"mt-4\">\r\n          <h3 className=\"font-semibold mb-2\">Add Question Type</h3>\r\n          {[\r\n            \"short\",\r\n            \"long\",\r\n            \"single-choice\",\r\n            \"multi-choice\",\r\n            \"numeric\",\r\n            \"file\",\r\n          ].map((t) => (\r\n            <button\r\n              key={t}\r\n              onClick={() => addQuestion(t)}\r\n              className=\"border p-1 px-2 m-1 rounded hover:bg-gray-100\"\r\n            >\r\n              {t}\r\n            </button>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Question editor */}\r\n        {assessment.sections[selectedSection]?.questions.length > 0 && (\r\n          <div className=\"mt-4 border-t pt-3\">\r\n            <h3 className=\"font-semibold mb-2\">Edit Questions</h3>\r\n            {assessment.sections[selectedSection].questions.map((q, qi) => (\r\n              <div\r\n                key={q.id}\r\n                className=\"border p-2 mb-2 rounded bg-gray-50 space-y-1\"\r\n              >\r\n                {/* Label */}\r\n                <input\r\n                  className=\"border p-1 w-full rounded\"\r\n                  value={q.label}\r\n                  onChange={(e) =>\r\n                    updateQuestion(selectedSection, qi, \"label\", e.target.value)\r\n                  }\r\n                />\r\n\r\n                {/* Options */}\r\n                {q.type.includes(\"choice\") && (\r\n                  <textarea\r\n                    className=\"border p-1 w-full rounded text-sm\"\r\n                    rows={2}\r\n                    value={q.options.join(\"\\n\")}\r\n                    onChange={(e) =>\r\n                      updateQuestion(\r\n                        selectedSection,\r\n                        qi,\r\n                        \"options\",\r\n                        e.target.value.split(\"\\n\")\r\n                      )\r\n                    }\r\n                  />\r\n                )}\r\n\r\n                {/* Numeric range */}\r\n                {q.type === \"numeric\" && (\r\n                  <div className=\"flex gap-2\">\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"border p-1 rounded w-1/2\"\r\n                      value={q.range.min}\r\n                      onChange={(e) =>\r\n                        updateQuestion(selectedSection, qi, \"range\", {\r\n                          ...q.range,\r\n                          min: +e.target.value,\r\n                        })\r\n                      }\r\n                      placeholder=\"Min\"\r\n                    />\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"border p-1 rounded w-1/2\"\r\n                      value={q.range.max}\r\n                      onChange={(e) =>\r\n                        updateQuestion(selectedSection, qi, \"range\", {\r\n                          ...q.range,\r\n                          max: +e.target.value,\r\n                        })\r\n                      }\r\n                      placeholder=\"Max\"\r\n                    />\r\n                  </div>\r\n                )}\r\n\r\n                {/* Required / Max length */}\r\n                <div className=\"flex gap-2 items-center\">\r\n                  <label className=\"text-sm\">\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={q.required}\r\n                      onChange={(e) =>\r\n                        updateQuestion(\r\n                          selectedSection,\r\n                          qi,\r\n                          \"required\",\r\n                          e.target.checked\r\n                        )\r\n                      }\r\n                    />{\" \"}\r\n                    Required\r\n                  </label>\r\n                  {q.type === \"long\" && (\r\n                    <input\r\n                      type=\"number\"\r\n                      className=\"border p-1 w-24 rounded\"\r\n                      value={q.maxLength}\r\n                      onChange={(e) =>\r\n                        updateQuestion(\r\n                          selectedSection,\r\n                          qi,\r\n                          \"maxLength\",\r\n                          +e.target.value\r\n                        )\r\n                      }\r\n                      placeholder=\"Max length\"\r\n                    />\r\n                  )}\r\n                </div>\r\n\r\n                {/* Conditional logic */}\r\n                <div className=\"text-sm\">\r\n                  <label>Show only if question ID = </label>\r\n                  <input\r\n                    className=\"border p-1 w-24 rounded\"\r\n                    value={q.condition.dependsOn}\r\n                    onChange={(e) =>\r\n                      updateQuestion(selectedSection, qi, \"condition\", {\r\n                        ...q.condition,\r\n                        dependsOn: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                  <label> equals </label>\r\n                  <input\r\n                    className=\"border p-1 w-24 rounded\"\r\n                    value={q.condition.value}\r\n                    onChange={(e) =>\r\n                      updateQuestion(selectedSection, qi, \"condition\", {\r\n                        ...q.condition,\r\n                        value: e.target.value,\r\n                      })\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Right panel – live preview */}\r\n      <div className=\"md:w-1/2 bg-gray-50 rounded-2xl shadow-lg p-5\">\r\n        <AssessmentPreview assessment={assessment} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}