{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viren\\\\Trial 2\\\\src\\\\index.js\";\n// src/index.js  (or src/main.jsx)\nimport React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './index.css';\n\n// start Dexie seed before anything else\nimport { seedData } from './db/dexie';\n\n// if you use MSW, import worker AFTER seeding (so requests see seeded data)\nimport { worker } from './mocks/browser'; // keep if you have MSW setup\n\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst queryClient = new QueryClient();\nasync function start() {\n  // seed indexeddb if empty\n  await seedData();\n\n  // start msw (only in dev)\n  if (process.env.NODE_ENV === 'development' && typeof worker !== 'undefined') {\n    try {\n      await worker.start();\n      console.log('MSW worker started');\n    } catch (e) {\n      console.warn('MSW worker failed to start:', e.message);\n    }\n  }\n  const root = createRoot(document.getElementById('root'));\n  root.render(/*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n      client: queryClient,\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this));\n}\nstart();","map":{"version":3,"names":["React","createRoot","App","seedData","worker","QueryClient","QueryClientProvider","jsxDEV","_jsxDEV","queryClient","start","process","env","NODE_ENV","console","log","e","warn","message","root","document","getElementById","render","StrictMode","children","client","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["C:/Users/viren/Trial 2/src/index.js"],"sourcesContent":["// src/index.js  (or src/main.jsx)\r\nimport React from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\n// start Dexie seed before anything else\r\nimport { seedData } from './db/dexie';\r\n\r\n// if you use MSW, import worker AFTER seeding (so requests see seeded data)\r\nimport { worker } from './mocks/browser'; // keep if you have MSW setup\r\n\r\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\r\n\r\n\r\nconst queryClient = new QueryClient();\r\n\r\nasync function start() {\r\n  // seed indexeddb if empty\r\n  await seedData();\r\n\r\n  // start msw (only in dev)\r\n  if (process.env.NODE_ENV === 'development' && typeof worker !== 'undefined') {\r\n    try {\r\n      await worker.start();\r\n      console.log('MSW worker started');\r\n    } catch (e) {\r\n      console.warn('MSW worker failed to start:', e.message);\r\n    }\r\n  }\r\n\r\n  const root = createRoot(document.getElementById('root'));\r\n  root.render(\r\n    <React.StrictMode>\r\n      <QueryClientProvider client={queryClient}>\r\n        <App />\r\n      </QueryClientProvider>\r\n    </React.StrictMode>\r\n  );\r\n}\r\n\r\nstart();\r\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,aAAa;;AAEpB;AACA,SAASC,QAAQ,QAAQ,YAAY;;AAErC;AACA,SAASC,MAAM,QAAQ,iBAAiB,CAAC,CAAC;;AAE1C,SAASC,WAAW,EAAEC,mBAAmB,QAAQ,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzE,MAAMC,WAAW,GAAG,IAAIJ,WAAW,CAAC,CAAC;AAErC,eAAeK,KAAKA,CAAA,EAAG;EACrB;EACA,MAAMP,QAAQ,CAAC,CAAC;;EAEhB;EACA,IAAIQ,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,IAAI,OAAOT,MAAM,KAAK,WAAW,EAAE;IAC3E,IAAI;MACF,MAAMA,MAAM,CAACM,KAAK,CAAC,CAAC;MACpBI,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACnC,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVF,OAAO,CAACG,IAAI,CAAC,6BAA6B,EAAED,CAAC,CAACE,OAAO,CAAC;IACxD;EACF;EAEA,MAAMC,IAAI,GAAGlB,UAAU,CAACmB,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;EACxDF,IAAI,CAACG,MAAM,cACTd,OAAA,CAACR,KAAK,CAACuB,UAAU;IAAAC,QAAA,eACfhB,OAAA,CAACF,mBAAmB;MAACmB,MAAM,EAAEhB,WAAY;MAAAe,QAAA,eACvChB,OAAA,CAACN,GAAG;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACY;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CACpB,CAAC;AACH;AAEAnB,KAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}