{"ast":null,"code":"import { create } from \"zustand\";\nexport const useAssessmentStore = create(set => ({\n  assessments: [],\n  // ✅ Load 3 default assessments with 12 questions each\n  fetchAssessments: () => {\n    const defaultAssessments = Array.from({\n      length: 3\n    }, (_, i) => ({\n      id: i + 1,\n      title: `Assessment ${i + 1}`,\n      sections: [{\n        name: `Section 1`,\n        questions: Array.from({\n          length: 12\n        }, (_, j) => ({\n          text: `Question ${j + 1}`,\n          type: j % 5 === 0 ? \"short\" : j % 5 === 1 ? \"long\" : j % 5 === 2 ? \"numeric\" : j % 5 === 3 ? \"single\" : \"multi\",\n          options: j % 5 === 3 || j % 5 === 4 ? [\"Option A\", \"Option B\", \"Option C\"] : []\n        }))\n      }]\n    }));\n    set({\n      assessments: defaultAssessments\n    });\n  },\n  // ✅ Add new assessment dynamically\n  addAssessment: title => set(state => ({\n    assessments: [...state.assessments, {\n      id: state.assessments.length + 1,\n      title,\n      sections: [{\n        name: `Section 1`,\n        questions: Array.from({\n          length: 12\n        }, (_, j) => ({\n          text: `Question ${j + 1}`,\n          type: j % 5 === 0 ? \"short\" : j % 5 === 1 ? \"long\" : j % 5 === 2 ? \"numeric\" : j % 5 === 3 ? \"single\" : \"multi\",\n          options: j % 5 === 3 || j % 5 === 4 ? [\"Option A\", \"Option B\", \"Option C\"] : []\n        }))\n      }]\n    }]\n  }))\n}));","map":{"version":3,"names":["create","useAssessmentStore","set","assessments","fetchAssessments","defaultAssessments","Array","from","length","_","i","id","title","sections","name","questions","j","text","type","options","addAssessment","state"],"sources":["C:/Users/viren/Trial 2/src/components/Assessments/useAssessmentStore.js"],"sourcesContent":["import { create } from \"zustand\";\r\n\r\nexport const useAssessmentStore = create((set) => ({\r\n  assessments: [],\r\n\r\n  // ✅ Load 3 default assessments with 12 questions each\r\n  fetchAssessments: () => {\r\n    const defaultAssessments = Array.from({ length: 3 }, (_, i) => ({\r\n      id: i + 1,\r\n      title: `Assessment ${i + 1}`,\r\n      sections: [\r\n        {\r\n          name: `Section 1`,\r\n          questions: Array.from({ length: 12 }, (_, j) => ({\r\n            text: `Question ${j + 1}`,\r\n            type:\r\n              j % 5 === 0\r\n                ? \"short\"\r\n                : j % 5 === 1\r\n                ? \"long\"\r\n                : j % 5 === 2\r\n                ? \"numeric\"\r\n                : j % 5 === 3\r\n                ? \"single\"\r\n                : \"multi\",\r\n            options:\r\n              j % 5 === 3 || j % 5 === 4\r\n                ? [\"Option A\", \"Option B\", \"Option C\"]\r\n                : [],\r\n          })),\r\n        },\r\n      ],\r\n    }));\r\n    set({ assessments: defaultAssessments });\r\n  },\r\n\r\n  // ✅ Add new assessment dynamically\r\n  addAssessment: (title) =>\r\n    set((state) => ({\r\n      assessments: [\r\n        ...state.assessments,\r\n        {\r\n          id: state.assessments.length + 1,\r\n          title,\r\n          sections: [\r\n            {\r\n              name: `Section 1`,\r\n              questions: Array.from({ length: 12 }, (_, j) => ({\r\n                text: `Question ${j + 1}`,\r\n                type:\r\n                  j % 5 === 0\r\n                    ? \"short\"\r\n                    : j % 5 === 1\r\n                    ? \"long\"\r\n                    : j % 5 === 2\r\n                    ? \"numeric\"\r\n                    : j % 5 === 3\r\n                    ? \"single\"\r\n                    : \"multi\",\r\n                options:\r\n                  j % 5 === 3 || j % 5 === 4\r\n                    ? [\"Option A\", \"Option B\", \"Option C\"]\r\n                    : [],\r\n              })),\r\n            },\r\n          ],\r\n        },\r\n      ],\r\n    })),\r\n}));\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAEhC,OAAO,MAAMC,kBAAkB,GAAGD,MAAM,CAAEE,GAAG,KAAM;EACjDC,WAAW,EAAE,EAAE;EAEf;EACAC,gBAAgB,EAAEA,CAAA,KAAM;IACtB,MAAMC,kBAAkB,GAAGC,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,MAAM;MAC9DC,EAAE,EAAED,CAAC,GAAG,CAAC;MACTE,KAAK,EAAE,cAAcF,CAAC,GAAG,CAAC,EAAE;MAC5BG,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,WAAW;QACjBC,SAAS,EAAET,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,EAAE,CAACC,CAAC,EAAEO,CAAC,MAAM;UAC/CC,IAAI,EAAE,YAAYD,CAAC,GAAG,CAAC,EAAE;UACzBE,IAAI,EACFF,CAAC,GAAG,CAAC,KAAK,CAAC,GACP,OAAO,GACPA,CAAC,GAAG,CAAC,KAAK,CAAC,GACX,MAAM,GACNA,CAAC,GAAG,CAAC,KAAK,CAAC,GACX,SAAS,GACTA,CAAC,GAAG,CAAC,KAAK,CAAC,GACX,QAAQ,GACR,OAAO;UACbG,OAAO,EACLH,CAAC,GAAG,CAAC,KAAK,CAAC,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,GACtB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,GACpC;QACR,CAAC,CAAC;MACJ,CAAC;IAEL,CAAC,CAAC,CAAC;IACHd,GAAG,CAAC;MAAEC,WAAW,EAAEE;IAAmB,CAAC,CAAC;EAC1C,CAAC;EAED;EACAe,aAAa,EAAGR,KAAK,IACnBV,GAAG,CAAEmB,KAAK,KAAM;IACdlB,WAAW,EAAE,CACX,GAAGkB,KAAK,CAAClB,WAAW,EACpB;MACEQ,EAAE,EAAEU,KAAK,CAAClB,WAAW,CAACK,MAAM,GAAG,CAAC;MAChCI,KAAK;MACLC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,WAAW;QACjBC,SAAS,EAAET,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,EAAE,CAACC,CAAC,EAAEO,CAAC,MAAM;UAC/CC,IAAI,EAAE,YAAYD,CAAC,GAAG,CAAC,EAAE;UACzBE,IAAI,EACFF,CAAC,GAAG,CAAC,KAAK,CAAC,GACP,OAAO,GACPA,CAAC,GAAG,CAAC,KAAK,CAAC,GACX,MAAM,GACNA,CAAC,GAAG,CAAC,KAAK,CAAC,GACX,SAAS,GACTA,CAAC,GAAG,CAAC,KAAK,CAAC,GACX,QAAQ,GACR,OAAO;UACbG,OAAO,EACLH,CAAC,GAAG,CAAC,KAAK,CAAC,IAAIA,CAAC,GAAG,CAAC,KAAK,CAAC,GACtB,CAAC,UAAU,EAAE,UAAU,EAAE,UAAU,CAAC,GACpC;QACR,CAAC,CAAC;MACJ,CAAC;IAEL,CAAC;EAEL,CAAC,CAAC;AACN,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}