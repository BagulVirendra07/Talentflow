{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viren\\\\Trial 2\\\\src\\\\components\\\\Candidates\\\\KanbanBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\n\n// ✅ Example: Imagine you fetch these 1000 candidates from DB/API\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateCandidates = () => {\n  const stages = [\"tech\", \"offer\", \"hired\", \"rejected\"];\n  const names = [\"Viren\", \"Amit\", \"Priya\", \"Rohan\", \"Sneha\", \"Kiran\", \"Neha\", \"Raj\", \"Simran\", \"Aarav\"];\n  const candidates = [];\n  for (let i = 1; i <= 1000; i++) {\n    const name = names[i % names.length];\n    const email = `${name.toLowerCase()}${i}@example.com`;\n    const stage = stages[i % stages.length];\n    candidates.push({\n      id: i.toString(),\n      name,\n      email,\n      stage\n    });\n  }\n  return candidates;\n};\nexport default function KanbanBoard() {\n  _s();\n  const [candidates, setCandidates] = useState(generateCandidates());\n\n  // ✅ Group candidates by stage\n  const grouped = useMemo(() => {\n    return {\n      tech: candidates.filter(c => c.stage === \"tech\"),\n      offer: candidates.filter(c => c.stage === \"offer\"),\n      hired: candidates.filter(c => c.stage === \"hired\"),\n      rejected: candidates.filter(c => c.stage === \"rejected\")\n    };\n  }, [candidates]);\n  const stages = [\"tech\", \"offer\", \"hired\", \"rejected\"];\n\n  // ✅ Handle drag + drop\n  const handleDragEnd = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const sourceStage = source.droppableId;\n    const destStage = destination.droppableId;\n    if (sourceStage === destStage && source.index === destination.index) return;\n    const sourceItems = Array.from(grouped[sourceStage]);\n    const [movedItem] = sourceItems.splice(source.index, 1);\n    movedItem.stage = destStage; // update stage\n\n    const destItems = Array.from(grouped[destStage]);\n    destItems.splice(destination.index, 0, movedItem);\n\n    // ✅ Update state efficiently\n    setCandidates(prev => prev.map(c => c.id === movedItem.id ? {\n      ...c,\n      stage: destStage\n    } : c));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex gap-4 p-6 bg-gray-100 min-h-screen overflow-x-auto\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: stages.map(stage => /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: stage,\n        children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: provided.innerRef,\n          ...provided.droppableProps,\n          className: `w-72 flex-shrink-0 p-3 rounded-xl ${snapshot.isDraggingOver ? \"bg-green-100\" : \"bg-white\"} shadow-md`,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold text-center capitalize mb-2\",\n            children: [stage, \" (\", grouped[stage].length, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this), grouped[stage].map((c, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: c.id,\n            index: index,\n            children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: provided.innerRef,\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              className: `p-3 mb-2 rounded-lg shadow-sm cursor-grab ${snapshot.isDragging ? \"bg-blue-100\" : \"bg-gray-50 hover:bg-gray-100\"}`,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"font-semibold\",\n                children: c.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-xs text-gray-600\",\n                children: c.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 23\n            }, this)\n          }, c.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 19\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this)\n      }, stage, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"prdvp8ENlnYBsx35cwlukURW1q8=\");\n_c = KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","useMemo","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","generateCandidates","stages","names","candidates","i","name","length","email","toLowerCase","stage","push","id","toString","KanbanBoard","_s","setCandidates","grouped","tech","filter","c","offer","hired","rejected","handleDragEnd","result","source","destination","sourceStage","droppableId","destStage","index","sourceItems","Array","from","movedItem","splice","destItems","prev","map","className","children","onDragEnd","provided","snapshot","ref","innerRef","droppableProps","isDraggingOver","fileName","_jsxFileName","lineNumber","columnNumber","draggableId","draggableProps","dragHandleProps","isDragging","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/viren/Trial 2/src/components/Candidates/KanbanBoard.jsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\n// ✅ Example: Imagine you fetch these 1000 candidates from DB/API\r\nconst generateCandidates = () => {\r\n  const stages = [\"tech\", \"offer\", \"hired\", \"rejected\"];\r\n  const names = [\"Viren\", \"Amit\", \"Priya\", \"Rohan\", \"Sneha\", \"Kiran\", \"Neha\", \"Raj\", \"Simran\", \"Aarav\"];\r\n  const candidates = [];\r\n\r\n  for (let i = 1; i <= 1000; i++) {\r\n    const name = names[i % names.length];\r\n    const email = `${name.toLowerCase()}${i}@example.com`;\r\n    const stage = stages[i % stages.length];\r\n    candidates.push({ id: i.toString(), name, email, stage });\r\n  }\r\n\r\n  return candidates;\r\n};\r\n\r\nexport default function KanbanBoard() {\r\n  const [candidates, setCandidates] = useState(generateCandidates());\r\n\r\n  // ✅ Group candidates by stage\r\n  const grouped = useMemo(() => {\r\n    return {\r\n      tech: candidates.filter((c) => c.stage === \"tech\"),\r\n      offer: candidates.filter((c) => c.stage === \"offer\"),\r\n      hired: candidates.filter((c) => c.stage === \"hired\"),\r\n      rejected: candidates.filter((c) => c.stage === \"rejected\"),\r\n    };\r\n  }, [candidates]);\r\n\r\n  const stages = [\"tech\", \"offer\", \"hired\", \"rejected\"];\r\n\r\n  // ✅ Handle drag + drop\r\n  const handleDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n    if (!destination) return;\r\n\r\n    const sourceStage = source.droppableId;\r\n    const destStage = destination.droppableId;\r\n\r\n    if (sourceStage === destStage && source.index === destination.index) return;\r\n\r\n    const sourceItems = Array.from(grouped[sourceStage]);\r\n    const [movedItem] = sourceItems.splice(source.index, 1);\r\n\r\n    movedItem.stage = destStage; // update stage\r\n\r\n    const destItems = Array.from(grouped[destStage]);\r\n    destItems.splice(destination.index, 0, movedItem);\r\n\r\n    // ✅ Update state efficiently\r\n    setCandidates((prev) =>\r\n      prev.map((c) =>\r\n        c.id === movedItem.id ? { ...c, stage: destStage } : c\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex gap-4 p-6 bg-gray-100 min-h-screen overflow-x-auto\">\r\n      <DragDropContext onDragEnd={handleDragEnd}>\r\n        {stages.map((stage) => (\r\n          <Droppable key={stage} droppableId={stage}>\r\n            {(provided, snapshot) => (\r\n              <div\r\n                ref={provided.innerRef}\r\n                {...provided.droppableProps}\r\n                className={`w-72 flex-shrink-0 p-3 rounded-xl ${\r\n                  snapshot.isDraggingOver ? \"bg-green-100\" : \"bg-white\"\r\n                } shadow-md`}\r\n              >\r\n                <h2 className=\"text-lg font-semibold text-center capitalize mb-2\">\r\n                  {stage} ({grouped[stage].length})\r\n                </h2>\r\n\r\n                {grouped[stage].map((c, index) => (\r\n                  <Draggable key={c.id} draggableId={c.id} index={index}>\r\n                    {(provided, snapshot) => (\r\n                      <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        className={`p-3 mb-2 rounded-lg shadow-sm cursor-grab ${\r\n                          snapshot.isDragging\r\n                            ? \"bg-blue-100\"\r\n                            : \"bg-gray-50 hover:bg-gray-100\"\r\n                        }`}\r\n                      >\r\n                        <div className=\"font-semibold\">{c.name}</div>\r\n                        <div className=\"text-xs text-gray-600\">{c.email}</div>\r\n                      </div>\r\n                    )}\r\n                  </Draggable>\r\n                ))}\r\n\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n        ))}\r\n      </DragDropContext>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAQ,qBAAqB;;AAE3E;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC;EACrD,MAAMC,KAAK,GAAG,CAAC,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,CAAC;EACrG,MAAMC,UAAU,GAAG,EAAE;EAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,EAAEA,CAAC,EAAE,EAAE;IAC9B,MAAMC,IAAI,GAAGH,KAAK,CAACE,CAAC,GAAGF,KAAK,CAACI,MAAM,CAAC;IACpC,MAAMC,KAAK,GAAG,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,GAAGJ,CAAC,cAAc;IACrD,MAAMK,KAAK,GAAGR,MAAM,CAACG,CAAC,GAAGH,MAAM,CAACK,MAAM,CAAC;IACvCH,UAAU,CAACO,IAAI,CAAC;MAAEC,EAAE,EAAEP,CAAC,CAACQ,QAAQ,CAAC,CAAC;MAAEP,IAAI;MAAEE,KAAK;MAAEE;IAAM,CAAC,CAAC;EAC3D;EAEA,OAAON,UAAU;AACnB,CAAC;AAED,eAAe,SAASU,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACX,UAAU,EAAEY,aAAa,CAAC,GAAGtB,QAAQ,CAACO,kBAAkB,CAAC,CAAC,CAAC;;EAElE;EACA,MAAMgB,OAAO,GAAGtB,OAAO,CAAC,MAAM;IAC5B,OAAO;MACLuB,IAAI,EAAEd,UAAU,CAACe,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACV,KAAK,KAAK,MAAM,CAAC;MAClDW,KAAK,EAAEjB,UAAU,CAACe,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACV,KAAK,KAAK,OAAO,CAAC;MACpDY,KAAK,EAAElB,UAAU,CAACe,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACV,KAAK,KAAK,OAAO,CAAC;MACpDa,QAAQ,EAAEnB,UAAU,CAACe,MAAM,CAAEC,CAAC,IAAKA,CAAC,CAACV,KAAK,KAAK,UAAU;IAC3D,CAAC;EACH,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC;EAEhB,MAAMF,MAAM,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC;;EAErD;EACA,MAAMsB,aAAa,GAAIC,MAAM,IAAK;IAChC,MAAM;MAAEC,MAAM;MAAEC;IAAY,CAAC,GAAGF,MAAM;IACtC,IAAI,CAACE,WAAW,EAAE;IAElB,MAAMC,WAAW,GAAGF,MAAM,CAACG,WAAW;IACtC,MAAMC,SAAS,GAAGH,WAAW,CAACE,WAAW;IAEzC,IAAID,WAAW,KAAKE,SAAS,IAAIJ,MAAM,CAACK,KAAK,KAAKJ,WAAW,CAACI,KAAK,EAAE;IAErE,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACjB,OAAO,CAACW,WAAW,CAAC,CAAC;IACpD,MAAM,CAACO,SAAS,CAAC,GAAGH,WAAW,CAACI,MAAM,CAACV,MAAM,CAACK,KAAK,EAAE,CAAC,CAAC;IAEvDI,SAAS,CAACzB,KAAK,GAAGoB,SAAS,CAAC,CAAC;;IAE7B,MAAMO,SAAS,GAAGJ,KAAK,CAACC,IAAI,CAACjB,OAAO,CAACa,SAAS,CAAC,CAAC;IAChDO,SAAS,CAACD,MAAM,CAACT,WAAW,CAACI,KAAK,EAAE,CAAC,EAAEI,SAAS,CAAC;;IAEjD;IACAnB,aAAa,CAAEsB,IAAI,IACjBA,IAAI,CAACC,GAAG,CAAEnB,CAAC,IACTA,CAAC,CAACR,EAAE,KAAKuB,SAAS,CAACvB,EAAE,GAAG;MAAE,GAAGQ,CAAC;MAAEV,KAAK,EAAEoB;IAAU,CAAC,GAAGV,CACvD,CACF,CAAC;EACH,CAAC;EAED,oBACEpB,OAAA;IAAKwC,SAAS,EAAC,yDAAyD;IAAAC,QAAA,eACtEzC,OAAA,CAACJ,eAAe;MAAC8C,SAAS,EAAElB,aAAc;MAAAiB,QAAA,EACvCvC,MAAM,CAACqC,GAAG,CAAE7B,KAAK,iBAChBV,OAAA,CAACH,SAAS;QAAagC,WAAW,EAAEnB,KAAM;QAAA+B,QAAA,EACvCA,CAACE,QAAQ,EAAEC,QAAQ,kBAClB5C,OAAA;UACE6C,GAAG,EAAEF,QAAQ,CAACG,QAAS;UAAA,GACnBH,QAAQ,CAACI,cAAc;UAC3BP,SAAS,EAAE,qCACTI,QAAQ,CAACI,cAAc,GAAG,cAAc,GAAG,UAAU,YAC1C;UAAAP,QAAA,gBAEbzC,OAAA;YAAIwC,SAAS,EAAC,mDAAmD;YAAAC,QAAA,GAC9D/B,KAAK,EAAC,IAAE,EAACO,OAAO,CAACP,KAAK,CAAC,CAACH,MAAM,EAAC,GAClC;UAAA;YAAA0C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EAEJnC,OAAO,CAACP,KAAK,CAAC,CAAC6B,GAAG,CAAC,CAACnB,CAAC,EAAEW,KAAK,kBAC3B/B,OAAA,CAACF,SAAS;YAAYuD,WAAW,EAAEjC,CAAC,CAACR,EAAG;YAACmB,KAAK,EAAEA,KAAM;YAAAU,QAAA,EACnDA,CAACE,QAAQ,EAAEC,QAAQ,kBAClB5C,OAAA;cACE6C,GAAG,EAAEF,QAAQ,CAACG,QAAS;cAAA,GACnBH,QAAQ,CAACW,cAAc;cAAA,GACvBX,QAAQ,CAACY,eAAe;cAC5Bf,SAAS,EAAE,6CACTI,QAAQ,CAACY,UAAU,GACf,aAAa,GACb,8BAA8B,EACjC;cAAAf,QAAA,gBAEHzC,OAAA;gBAAKwC,SAAS,EAAC,eAAe;gBAAAC,QAAA,EAAErB,CAAC,CAACd;cAAI;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC7CpD,OAAA;gBAAKwC,SAAS,EAAC,uBAAuB;gBAAAC,QAAA,EAAErB,CAAC,CAACZ;cAAK;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD;UACN,GAfahC,CAAC,CAACR,EAAE;YAAAqC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBT,CACZ,CAAC,EAEDT,QAAQ,CAACc,WAAW;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MACN,GAnCa1C,KAAK;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAoCV,CACZ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACa;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACrC,EAAA,CAtFuBD,WAAW;AAAA4C,EAAA,GAAX5C,WAAW;AAAA,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}