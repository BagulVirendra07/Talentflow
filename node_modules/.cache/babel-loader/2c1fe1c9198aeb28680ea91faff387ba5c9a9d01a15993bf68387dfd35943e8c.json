{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viren\\\\Trial 2\\\\src\\\\components\\\\Candidates\\\\KanbanBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DndContext, closestCorners, useSensor, useSensors, PointerSensor } from \"@dnd-kit/core\";\nimport { SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\nimport SortableCandidate from \"./SortableCandidate\";\nimport { db } from \"../../db/dexie\"; // ✅ correct import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KanbanBoard() {\n  _s();\n  const stages = [\"applied\", \"screen\", \"tech\", \"offer\", \"hired\", \"rejected\"];\n  const [candidates, setCandidates] = useState(() => {\n    // Generate 1000 dummy candidates randomly distributed\n    const arr = [];\n    for (let i = 1; i <= 1000; i++) {\n      const stage = stages[Math.floor(Math.random() * stages.length)];\n      arr.push({\n        id: i.toString(),\n        name: `Candidate ${i}`,\n        email: `candidate${i}@example.com`,\n        stage\n      });\n    }\n    return arr;\n  });\n  const sensors = useSensors(useSensor(PointerSensor));\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over) return;\n    if (active.id === over.id) return;\n    const activeCandidate = candidates.find(c => c.id === active.id);\n    if (!activeCandidate || !stages.includes(over.id)) return;\n    setCandidates(prev => prev.map(c => c.id === active.id ? {\n      ...c,\n      stage: over.id\n    } : c));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginBottom: 20\n      },\n      children: \"Candidates Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      collisionDetection: closestCorners,\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 20,\n          overflowX: \"auto\"\n        },\n        children: stages.map(stage => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"0 0 250px\",\n            padding: 10,\n            background: \"#f9f9f9\",\n            border: \"1px solid #ddd\",\n            borderRadius: 6,\n            minHeight: 400\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              textTransform: \"capitalize\"\n            },\n            children: stage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n            id: stage,\n            items: candidates.filter(c => c.stage === stage).map(c => c.id),\n            strategy: verticalListSortingStrategy,\n            children: candidates.filter(c => c.stage === stage).map(candidate => /*#__PURE__*/_jsxDEV(SortableCandidate, {\n              candidate: candidate\n            }, candidate.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, stage, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"uy8XxD/4CrghoilapsMjfRZhTkI=\", false, function () {\n  return [useSensors, useSensor];\n});\n_c = KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","DndContext","closestCorners","useSensor","useSensors","PointerSensor","SortableContext","verticalListSortingStrategy","SortableCandidate","db","jsxDEV","_jsxDEV","KanbanBoard","_s","stages","candidates","setCandidates","arr","i","stage","Math","floor","random","length","push","id","toString","name","email","sensors","handleDragEnd","event","active","over","activeCandidate","find","c","includes","prev","map","children","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","collisionDetection","onDragEnd","display","gap","overflowX","flex","padding","background","border","borderRadius","minHeight","textTransform","items","filter","strategy","candidate","_c","$RefreshReg$"],"sources":["C:/Users/viren/Trial 2/src/components/Candidates/KanbanBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DndContext, closestCorners, useSensor, useSensors, PointerSensor } from \"@dnd-kit/core\";\r\nimport { SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\r\nimport SortableCandidate from \"./SortableCandidate\";\r\nimport { db } from \"../../db/dexie\"; // ✅ correct import\r\n\r\nexport default function KanbanBoard() {\r\n  const stages = [\"applied\", \"screen\", \"tech\", \"offer\", \"hired\", \"rejected\"];\r\n\r\n  const [candidates, setCandidates] = useState(() => {\r\n    // Generate 1000 dummy candidates randomly distributed\r\n    const arr = [];\r\n    for (let i = 1; i <= 1000; i++) {\r\n      const stage = stages[Math.floor(Math.random() * stages.length)];\r\n      arr.push({\r\n        id: i.toString(),\r\n        name: `Candidate ${i}`,\r\n        email: `candidate${i}@example.com`,\r\n        stage,\r\n      });\r\n    }\r\n    return arr;\r\n  });\r\n\r\n  const sensors = useSensors(useSensor(PointerSensor));\r\n\r\n  const handleDragEnd = (event) => {\r\n    const { active, over } = event;\r\n    if (!over) return;\r\n    if (active.id === over.id) return;\r\n\r\n    const activeCandidate = candidates.find((c) => c.id === active.id);\r\n    if (!activeCandidate || !stages.includes(over.id)) return;\r\n\r\n    setCandidates((prev) =>\r\n      prev.map((c) =>\r\n        c.id === active.id ? { ...c, stage: over.id } : c\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ marginBottom: 20 }}>Candidates Board</h2>\r\n      <DndContext sensors={sensors} collisionDetection={closestCorners} onDragEnd={handleDragEnd}>\r\n        <div style={{ display: \"flex\", gap: 20, overflowX: \"auto\" }}>\r\n          {stages.map((stage) => (\r\n            <div\r\n              key={stage}\r\n              style={{\r\n                flex: \"0 0 250px\",\r\n                padding: 10,\r\n                background: \"#f9f9f9\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: 6,\r\n                minHeight: 400,\r\n              }}\r\n            >\r\n              <h4 style={{ textTransform: \"capitalize\" }}>{stage}</h4>\r\n              <SortableContext id={stage} items={candidates.filter((c) => c.stage === stage).map((c) => c.id)} strategy={verticalListSortingStrategy}>\r\n                {candidates\r\n                  .filter((c) => c.stage === stage)\r\n                  .map((candidate) => (\r\n                    <SortableCandidate key={candidate.id} candidate={candidate} />\r\n                  ))}\r\n              </SortableContext>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </DndContext>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}