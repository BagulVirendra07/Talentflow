{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viren\\\\Trial 2\\\\src\\\\components\\\\Candidates\\\\KanbanBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DndContext, closestCorners, useSensor, useSensors, PointerSensor } from \"@dnd-kit/core\";\nimport { SortableContext, verticalListSortingStrategy } from \"@dnd-kit/sortable\";\nimport SortableCandidate from \"./SortableCandidate\";\nimport { db } from \"../../db/dexie\"; // correct import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KanbanBoard() {\n  _s();\n  // ✅ Define stages & some sample jobs\n  const stages = [\"applied\", \"screen\", \"tech\", \"offer\", \"hired\", \"rejected\"];\n  const jobs = [\"Software Engineer\", \"Frontend Developer\", \"Backend Developer\", \"Data Analyst\", \"ML Engineer\", \"DevOps Engineer\", \"UI/UX Designer\", \"QA Tester\", \"Project Manager\", \"Support Specialist\"];\n\n  // ✅ Create 1000 candidates randomly assigned to jobs & stages\n  const [candidates, setCandidates] = useState(() => {\n    const arr = [];\n    for (let i = 1; i <= 1000; i++) {\n      const randomJob = jobs[Math.floor(Math.random() * jobs.length)];\n      const randomStage = stages[Math.floor(Math.random() * stages.length)];\n      arr.push({\n        id: i.toString(),\n        name: `Candidate ${i}`,\n        email: `candidate${i}@example.com`,\n        job: randomJob,\n        stage: randomStage\n      });\n    }\n    return arr;\n  });\n  const sensors = useSensors(useSensor(PointerSensor));\n\n  // ✅ Handle drag-drop stage updates\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over) return;\n    const sourceId = active.id;\n    const destinationId = over.id;\n    const activeCandidate = candidates.find(c => c.id === sourceId);\n    if (!activeCandidate) return;\n\n    // Only update stage if dropped into a valid stage column\n    if (stages.includes(destinationId)) {\n      setCandidates(prev => prev.map(c => c.id === sourceId ? {\n        ...c,\n        stage: destinationId\n      } : c));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: \"center\",\n        marginBottom: 20\n      },\n      children: \"Candidates Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      collisionDetection: closestCorners,\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: 20,\n          overflowX: \"auto\",\n          alignItems: \"flex-start\"\n        },\n        children: stages.map(stage => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            flex: \"0 0 250px\",\n            padding: 10,\n            background: \"#f9f9f9\",\n            border: \"1px solid #ddd\",\n            borderRadius: 6,\n            minHeight: 500\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            style: {\n              textTransform: \"capitalize\",\n              textAlign: \"center\"\n            },\n            children: stage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(SortableContext, {\n            id: stage,\n            items: candidates.filter(c => c.stage === stage).map(c => c.id),\n            strategy: verticalListSortingStrategy,\n            children: candidates.filter(c => c.stage === stage).map(candidate => /*#__PURE__*/_jsxDEV(SortableCandidate, {\n              candidate: candidate\n            }, candidate.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this)]\n        }, stage, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"MMolKRMAXDShLmAjBMnRmjqA0v4=\", false, function () {\n  return [useSensors, useSensor];\n});\n_c = KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","DndContext","closestCorners","useSensor","useSensors","PointerSensor","SortableContext","verticalListSortingStrategy","SortableCandidate","db","jsxDEV","_jsxDEV","KanbanBoard","_s","stages","jobs","candidates","setCandidates","arr","i","randomJob","Math","floor","random","length","randomStage","push","id","toString","name","email","job","stage","sensors","handleDragEnd","event","active","over","sourceId","destinationId","activeCandidate","find","c","includes","prev","map","children","style","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","collisionDetection","onDragEnd","display","gap","overflowX","alignItems","flex","padding","background","border","borderRadius","minHeight","textTransform","items","filter","strategy","candidate","_c","$RefreshReg$"],"sources":["C:/Users/viren/Trial 2/src/components/Candidates/KanbanBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  DndContext,\r\n  closestCorners,\r\n  useSensor,\r\n  useSensors,\r\n  PointerSensor,\r\n} from \"@dnd-kit/core\";\r\nimport {\r\n  SortableContext,\r\n  verticalListSortingStrategy,\r\n} from \"@dnd-kit/sortable\";\r\nimport SortableCandidate from \"./SortableCandidate\";\r\nimport { db } from \"../../db/dexie\"; // correct import\r\n\r\nexport default function KanbanBoard() {\r\n  // ✅ Define stages & some sample jobs\r\n  const stages = [\"applied\", \"screen\", \"tech\", \"offer\", \"hired\", \"rejected\"];\r\n  const jobs = [\r\n    \"Software Engineer\",\r\n    \"Frontend Developer\",\r\n    \"Backend Developer\",\r\n    \"Data Analyst\",\r\n    \"ML Engineer\",\r\n    \"DevOps Engineer\",\r\n    \"UI/UX Designer\",\r\n    \"QA Tester\",\r\n    \"Project Manager\",\r\n    \"Support Specialist\",\r\n  ];\r\n\r\n  // ✅ Create 1000 candidates randomly assigned to jobs & stages\r\n  const [candidates, setCandidates] = useState(() => {\r\n    const arr = [];\r\n    for (let i = 1; i <= 1000; i++) {\r\n      const randomJob = jobs[Math.floor(Math.random() * jobs.length)];\r\n      const randomStage = stages[Math.floor(Math.random() * stages.length)];\r\n      arr.push({\r\n        id: i.toString(),\r\n        name: `Candidate ${i}`,\r\n        email: `candidate${i}@example.com`,\r\n        job: randomJob,\r\n        stage: randomStage,\r\n      });\r\n    }\r\n    return arr;\r\n  });\r\n\r\n  const sensors = useSensors(useSensor(PointerSensor));\r\n\r\n  // ✅ Handle drag-drop stage updates\r\n  const handleDragEnd = (event) => {\r\n    const { active, over } = event;\r\n    if (!over) return;\r\n\r\n    const sourceId = active.id;\r\n    const destinationId = over.id;\r\n\r\n    const activeCandidate = candidates.find((c) => c.id === sourceId);\r\n    if (!activeCandidate) return;\r\n\r\n    // Only update stage if dropped into a valid stage column\r\n    if (stages.includes(destinationId)) {\r\n      setCandidates((prev) =>\r\n        prev.map((c) =>\r\n          c.id === sourceId ? { ...c, stage: destinationId } : c\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2 style={{ textAlign: \"center\", marginBottom: 20 }}>Candidates Board</h2>\r\n      <DndContext\r\n        sensors={sensors}\r\n        collisionDetection={closestCorners}\r\n        onDragEnd={handleDragEnd}\r\n      >\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            gap: 20,\r\n            overflowX: \"auto\",\r\n            alignItems: \"flex-start\",\r\n          }}\r\n        >\r\n          {stages.map((stage) => (\r\n            <div\r\n              key={stage}\r\n              style={{\r\n                flex: \"0 0 250px\",\r\n                padding: 10,\r\n                background: \"#f9f9f9\",\r\n                border: \"1px solid #ddd\",\r\n                borderRadius: 6,\r\n                minHeight: 500,\r\n              }}\r\n            >\r\n              <h3 style={{ textTransform: \"capitalize\", textAlign: \"center\" }}>\r\n                {stage}\r\n              </h3>\r\n\r\n              <SortableContext\r\n                id={stage}\r\n                items={candidates\r\n                  .filter((c) => c.stage === stage)\r\n                  .map((c) => c.id)}\r\n                strategy={verticalListSortingStrategy}\r\n              >\r\n                {candidates\r\n                  .filter((c) => c.stage === stage)\r\n                  .map((candidate) => (\r\n                    <SortableCandidate key={candidate.id} candidate={candidate} />\r\n                  ))}\r\n              </SortableContext>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </DndContext>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,UAAU,EACVC,cAAc,EACdC,SAAS,EACTC,UAAU,EACVC,aAAa,QACR,eAAe;AACtB,SACEC,eAAe,EACfC,2BAA2B,QACtB,mBAAmB;AAC1B,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,SAASC,EAAE,QAAQ,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErC,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC;EACA,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC;EAC1E,MAAMC,IAAI,GAAG,CACX,mBAAmB,EACnB,oBAAoB,EACpB,mBAAmB,EACnB,cAAc,EACd,aAAa,EACb,iBAAiB,EACjB,gBAAgB,EAChB,WAAW,EACX,iBAAiB,EACjB,oBAAoB,CACrB;;EAED;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAC,MAAM;IACjD,MAAMkB,GAAG,GAAG,EAAE;IACd,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAI,IAAI,EAAEA,CAAC,EAAE,EAAE;MAC9B,MAAMC,SAAS,GAAGL,IAAI,CAACM,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,IAAI,CAACS,MAAM,CAAC,CAAC;MAC/D,MAAMC,WAAW,GAAGX,MAAM,CAACO,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,MAAM,CAACU,MAAM,CAAC,CAAC;MACrEN,GAAG,CAACQ,IAAI,CAAC;QACPC,EAAE,EAAER,CAAC,CAACS,QAAQ,CAAC,CAAC;QAChBC,IAAI,EAAE,aAAaV,CAAC,EAAE;QACtBW,KAAK,EAAE,YAAYX,CAAC,cAAc;QAClCY,GAAG,EAAEX,SAAS;QACdY,KAAK,EAAEP;MACT,CAAC,CAAC;IACJ;IACA,OAAOP,GAAG;EACZ,CAAC,CAAC;EAEF,MAAMe,OAAO,GAAG7B,UAAU,CAACD,SAAS,CAACE,aAAa,CAAC,CAAC;;EAEpD;EACA,MAAM6B,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAM;MAAEC,MAAM;MAAEC;IAAK,CAAC,GAAGF,KAAK;IAC9B,IAAI,CAACE,IAAI,EAAE;IAEX,MAAMC,QAAQ,GAAGF,MAAM,CAACT,EAAE;IAC1B,MAAMY,aAAa,GAAGF,IAAI,CAACV,EAAE;IAE7B,MAAMa,eAAe,GAAGxB,UAAU,CAACyB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACf,EAAE,KAAKW,QAAQ,CAAC;IACjE,IAAI,CAACE,eAAe,EAAE;;IAEtB;IACA,IAAI1B,MAAM,CAAC6B,QAAQ,CAACJ,aAAa,CAAC,EAAE;MAClCtB,aAAa,CAAE2B,IAAI,IACjBA,IAAI,CAACC,GAAG,CAAEH,CAAC,IACTA,CAAC,CAACf,EAAE,KAAKW,QAAQ,GAAG;QAAE,GAAGI,CAAC;QAAEV,KAAK,EAAEO;MAAc,CAAC,GAAGG,CACvD,CACF,CAAC;IACH;EACF,CAAC;EAED,oBACE/B,OAAA;IAAAmC,QAAA,gBACEnC,OAAA;MAAIoC,KAAK,EAAE;QAAEC,SAAS,EAAE,QAAQ;QAAEC,YAAY,EAAE;MAAG,CAAE;MAAAH,QAAA,EAAC;IAAgB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3E1C,OAAA,CAACV,UAAU;MACTgC,OAAO,EAAEA,OAAQ;MACjBqB,kBAAkB,EAAEpD,cAAe;MACnCqD,SAAS,EAAErB,aAAc;MAAAY,QAAA,eAEzBnC,OAAA;QACEoC,KAAK,EAAE;UACLS,OAAO,EAAE,MAAM;UACfC,GAAG,EAAE,EAAE;UACPC,SAAS,EAAE,MAAM;UACjBC,UAAU,EAAE;QACd,CAAE;QAAAb,QAAA,EAEDhC,MAAM,CAAC+B,GAAG,CAAEb,KAAK,iBAChBrB,OAAA;UAEEoC,KAAK,EAAE;YACLa,IAAI,EAAE,WAAW;YACjBC,OAAO,EAAE,EAAE;YACXC,UAAU,EAAE,SAAS;YACrBC,MAAM,EAAE,gBAAgB;YACxBC,YAAY,EAAE,CAAC;YACfC,SAAS,EAAE;UACb,CAAE;UAAAnB,QAAA,gBAEFnC,OAAA;YAAIoC,KAAK,EAAE;cAAEmB,aAAa,EAAE,YAAY;cAAElB,SAAS,EAAE;YAAS,CAAE;YAAAF,QAAA,EAC7Dd;UAAK;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ,CAAC,eAEL1C,OAAA,CAACL,eAAe;YACdqB,EAAE,EAAEK,KAAM;YACVmC,KAAK,EAAEnD,UAAU,CACdoD,MAAM,CAAE1B,CAAC,IAAKA,CAAC,CAACV,KAAK,KAAKA,KAAK,CAAC,CAChCa,GAAG,CAAEH,CAAC,IAAKA,CAAC,CAACf,EAAE,CAAE;YACpB0C,QAAQ,EAAE9D,2BAA4B;YAAAuC,QAAA,EAErC9B,UAAU,CACRoD,MAAM,CAAE1B,CAAC,IAAKA,CAAC,CAACV,KAAK,KAAKA,KAAK,CAAC,CAChCa,GAAG,CAAEyB,SAAS,iBACb3D,OAAA,CAACH,iBAAiB;cAAoB8D,SAAS,EAAEA;YAAU,GAAnCA,SAAS,CAAC3C,EAAE;cAAAuB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAyB,CAC9D;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACW,CAAC;QAAA,GA1BbrB,KAAK;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OA2BP,CACN;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACxC,EAAA,CA3GuBD,WAAW;EAAA,QAiCjBR,UAAU,EAACD,SAAS;AAAA;AAAAoE,EAAA,GAjCd3D,WAAW;AAAA,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}