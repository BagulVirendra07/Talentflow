{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viren\\\\Trial 2\\\\src\\\\components\\\\Jobs\\\\JobCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport JobCard from \"./JobCard\";\nimport Navbar from \"../Navbar\";\nimport { db } from \"../../hooks/db\";\nimport { useLiveQuery } from \"dexie-react-hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function JobsBoard() {\n  _s();\n  // ✅ fetch jobs live from Dexie\n  const jobs = useLiveQuery(() => db.jobs.toArray(), []);\n\n  // ✅ if no jobs, create dummy demo data once\n  useEffect(() => {\n    const addDummyJobs = async () => {\n      const count = await db.jobs.count();\n      if (count === 0) {\n        const dummyJobs = Array.from({\n          length: 10\n        }, (_, i) => ({\n          id: i + 1,\n          title: `Job ${i + 1}`,\n          slug: `job-${i + 1}`,\n          status: i % 2 === 0 ? \"active\" : \"archived\"\n        }));\n        await db.jobs.bulkAdd(dummyJobs);\n      }\n    };\n    addDummyJobs();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 max-w-5xl mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6 text-gray-800\",\n      children: \"Jobs Board\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), jobs !== null && jobs !== void 0 && jobs.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col gap-4\",\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(JobCard, {\n        job: job\n      }, job.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-500\",\n      children: \"No jobs available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(JobsBoard, \"+Ga4RN5YBC9n9pGXDTe6sBYNRBw=\", false, function () {\n  return [useLiveQuery];\n});\n_c = JobsBoard;\nvar _c;\n$RefreshReg$(_c, \"JobsBoard\");","map":{"version":3,"names":["React","useEffect","useState","JobCard","Navbar","db","useLiveQuery","jsxDEV","_jsxDEV","JobsBoard","_s","jobs","toArray","addDummyJobs","count","dummyJobs","Array","from","length","_","i","id","title","slug","status","bulkAdd","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","job","_c","$RefreshReg$"],"sources":["C:/Users/viren/Trial 2/src/components/Jobs/JobCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport JobCard from \"./JobCard\";\r\nimport Navbar from \"../Navbar\";\r\nimport { db } from \"../../hooks/db\";\r\nimport { useLiveQuery } from \"dexie-react-hooks\";\r\n\r\nexport default function JobsBoard() {\r\n  // ✅ fetch jobs live from Dexie\r\n  const jobs = useLiveQuery(() => db.jobs.toArray(), []);\r\n\r\n  // ✅ if no jobs, create dummy demo data once\r\n  useEffect(() => {\r\n    const addDummyJobs = async () => {\r\n      const count = await db.jobs.count();\r\n      if (count === 0) {\r\n        const dummyJobs = Array.from({ length: 10 }, (_, i) => ({\r\n          id: i + 1,\r\n          title: `Job ${i + 1}`,\r\n          slug: `job-${i + 1}`,\r\n          status: i % 2 === 0 ? \"active\" : \"archived\",\r\n        }));\r\n        await db.jobs.bulkAdd(dummyJobs);\r\n      }\r\n    };\r\n    addDummyJobs();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"p-6 max-w-5xl mx-auto\">\r\n      <Navbar />\r\n      <h1 className=\"text-2xl font-bold mb-6 text-gray-800\">Jobs Board</h1>\r\n\r\n      {jobs?.length ? (\r\n        <div className=\"flex flex-col gap-4\">\r\n          {jobs.map((job) => (\r\n            <JobCard key={job.id} job={job} />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p className=\"text-gray-500\">No jobs available.</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,WAAW;AAC9B,SAASC,EAAE,QAAQ,gBAAgB;AACnC,SAASC,YAAY,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAClC;EACA,MAAMC,IAAI,GAAGL,YAAY,CAAC,MAAMD,EAAE,CAACM,IAAI,CAACC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;;EAEtD;EACAX,SAAS,CAAC,MAAM;IACd,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,KAAK,GAAG,MAAMT,EAAE,CAACM,IAAI,CAACG,KAAK,CAAC,CAAC;MACnC,IAAIA,KAAK,KAAK,CAAC,EAAE;QACf,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,MAAM;UACtDC,EAAE,EAAED,CAAC,GAAG,CAAC;UACTE,KAAK,EAAE,OAAOF,CAAC,GAAG,CAAC,EAAE;UACrBG,IAAI,EAAE,OAAOH,CAAC,GAAG,CAAC,EAAE;UACpBI,MAAM,EAAEJ,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG;QACnC,CAAC,CAAC,CAAC;QACH,MAAMf,EAAE,CAACM,IAAI,CAACc,OAAO,CAACV,SAAS,CAAC;MAClC;IACF,CAAC;IACDF,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKkB,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBACpCnB,OAAA,CAACJ,MAAM;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVvB,OAAA;MAAIkB,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEpEpB,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEO,MAAM,gBACXV,OAAA;MAAKkB,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EACjChB,IAAI,CAACqB,GAAG,CAAEC,GAAG,iBACZzB,OAAA,CAACL,OAAO;QAAc8B,GAAG,EAAEA;MAAI,GAAjBA,GAAG,CAACZ,EAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,gBAENvB,OAAA;MAAGkB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CArCuBD,SAAS;EAAA,QAElBH,YAAY;AAAA;AAAA4B,EAAA,GAFHzB,SAAS;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}