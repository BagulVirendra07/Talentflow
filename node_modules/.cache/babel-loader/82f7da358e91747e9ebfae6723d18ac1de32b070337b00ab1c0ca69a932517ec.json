{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\viren\\\\Trial 2\\\\src\\\\components\\\\Candidates\\\\KanbanBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DndContext, PointerSensor, useSensor, useSensors, closestCenter } from \"@dnd-kit/core\";\nimport KanbanColumn from \"./KanbanColumn\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KanbanBoard() {\n  _s();\n  const stages = [\"tech\", \"offer\", \"hired\", \"rejected\"];\n  const [candidates, setCandidates] = useState([{\n    id: \"1\",\n    name: \"Amit\",\n    email: \"amit@example.com\",\n    stage: \"tech\"\n  }, {\n    id: \"2\",\n    name: \"Priya\",\n    email: \"priya@example.com\",\n    stage: \"offer\"\n  }, {\n    id: \"3\",\n    name: \"Rohan\",\n    email: \"rohan@example.com\",\n    stage: \"hired\"\n  }, {\n    id: \"4\",\n    name: \"Sneha\",\n    email: \"sneha@example.com\",\n    stage: \"rejected\"\n  }]);\n  const sensors = useSensors(useSensor(PointerSensor));\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (!over) return;\n    const activeId = active.id;\n    const overId = over.id;\n    if (activeId === overId) return;\n\n    // update candidate stage\n    setCandidates(prev => prev.map(c => c.id === activeId ? {\n      ...c,\n      stage: overId\n    } : c));\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    sensors: sensors,\n    collisionDetection: closestCenter,\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"20px\",\n        padding: \"20px\",\n        background: \"#f5f5f5\",\n        minHeight: \"100vh\",\n        overflowX: \"auto\"\n      },\n      children: stages.map(stage => /*#__PURE__*/_jsxDEV(KanbanColumn, {\n        id: stage,\n        title: stage,\n        candidates: candidates.filter(c => c.stage === stage)\n      }, stage, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(KanbanBoard, \"zgpV4o7CWDnPZR5PW1NG/lAgq2Q=\", false, function () {\n  return [useSensors, useSensor];\n});\n_c = KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");","map":{"version":3,"names":["React","useState","DndContext","PointerSensor","useSensor","useSensors","closestCenter","KanbanColumn","jsxDEV","_jsxDEV","KanbanBoard","_s","stages","candidates","setCandidates","id","name","email","stage","sensors","handleDragEnd","event","active","over","activeId","overId","prev","map","c","collisionDetection","onDragEnd","children","style","display","gap","padding","background","minHeight","overflowX","title","filter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/viren/Trial 2/src/components/Candidates/KanbanBoard.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  DndContext,\r\n  PointerSensor,\r\n  useSensor,\r\n  useSensors,\r\n  closestCenter,\r\n} from \"@dnd-kit/core\";\r\nimport KanbanColumn from \"./KanbanColumn\";\r\n\r\nexport default function KanbanBoard() {\r\n  const stages = [\"tech\", \"offer\", \"hired\", \"rejected\"];\r\n\r\n  const [candidates, setCandidates] = useState([\r\n    { id: \"1\", name: \"Amit\", email: \"amit@example.com\", stage: \"tech\" },\r\n    { id: \"2\", name: \"Priya\", email: \"priya@example.com\", stage: \"offer\" },\r\n    { id: \"3\", name: \"Rohan\", email: \"rohan@example.com\", stage: \"hired\" },\r\n    { id: \"4\", name: \"Sneha\", email: \"sneha@example.com\", stage: \"rejected\" },\r\n  ]);\r\n\r\n  const sensors = useSensors(useSensor(PointerSensor));\r\n\r\n  const handleDragEnd = (event) => {\r\n    const { active, over } = event;\r\n    if (!over) return;\r\n\r\n    const activeId = active.id;\r\n    const overId = over.id;\r\n\r\n    if (activeId === overId) return;\r\n\r\n    // update candidate stage\r\n    setCandidates((prev) =>\r\n      prev.map((c) =>\r\n        c.id === activeId ? { ...c, stage: overId } : c\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DndContext\r\n      sensors={sensors}\r\n      collisionDetection={closestCenter}\r\n      onDragEnd={handleDragEnd}\r\n    >\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          gap: \"20px\",\r\n          padding: \"20px\",\r\n          background: \"#f5f5f5\",\r\n          minHeight: \"100vh\",\r\n          overflowX: \"auto\",\r\n        }}\r\n      >\r\n        {stages.map((stage) => (\r\n          <KanbanColumn\r\n            key={stage}\r\n            id={stage}\r\n            title={stage}\r\n            candidates={candidates.filter((c) => c.stage === stage)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </DndContext>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,UAAU,EACVC,aAAa,EACbC,SAAS,EACTC,UAAU,EACVC,aAAa,QACR,eAAe;AACtB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAMC,MAAM,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU,CAAC;EAErD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,CAC3C;IAAEc,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,MAAM;IAAEC,KAAK,EAAE,kBAAkB;IAAEC,KAAK,EAAE;EAAO,CAAC,EACnE;IAAEH,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACtE;IAAEH,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACtE;IAAEH,EAAE,EAAE,GAAG;IAAEC,IAAI,EAAE,OAAO;IAAEC,KAAK,EAAE,mBAAmB;IAAEC,KAAK,EAAE;EAAW,CAAC,CAC1E,CAAC;EAEF,MAAMC,OAAO,GAAGd,UAAU,CAACD,SAAS,CAACD,aAAa,CAAC,CAAC;EAEpD,MAAMiB,aAAa,GAAIC,KAAK,IAAK;IAC/B,MAAM;MAAEC,MAAM;MAAEC;IAAK,CAAC,GAAGF,KAAK;IAC9B,IAAI,CAACE,IAAI,EAAE;IAEX,MAAMC,QAAQ,GAAGF,MAAM,CAACP,EAAE;IAC1B,MAAMU,MAAM,GAAGF,IAAI,CAACR,EAAE;IAEtB,IAAIS,QAAQ,KAAKC,MAAM,EAAE;;IAEzB;IACAX,aAAa,CAAEY,IAAI,IACjBA,IAAI,CAACC,GAAG,CAAEC,CAAC,IACTA,CAAC,CAACb,EAAE,KAAKS,QAAQ,GAAG;MAAE,GAAGI,CAAC;MAAEV,KAAK,EAAEO;IAAO,CAAC,GAAGG,CAChD,CACF,CAAC;EACH,CAAC;EAED,oBACEnB,OAAA,CAACP,UAAU;IACTiB,OAAO,EAAEA,OAAQ;IACjBU,kBAAkB,EAAEvB,aAAc;IAClCwB,SAAS,EAAEV,aAAc;IAAAW,QAAA,eAEzBtB,OAAA;MACEuB,KAAK,EAAE;QACLC,OAAO,EAAE,MAAM;QACfC,GAAG,EAAE,MAAM;QACXC,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,SAAS;QACrBC,SAAS,EAAE,OAAO;QAClBC,SAAS,EAAE;MACb,CAAE;MAAAP,QAAA,EAEDnB,MAAM,CAACe,GAAG,CAAET,KAAK,iBAChBT,OAAA,CAACF,YAAY;QAEXQ,EAAE,EAAEG,KAAM;QACVqB,KAAK,EAAErB,KAAM;QACbL,UAAU,EAAEA,UAAU,CAAC2B,MAAM,CAAEZ,CAAC,IAAKA,CAAC,CAACV,KAAK,KAAKA,KAAK;MAAE,GAHnDA,KAAK;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEjB;AAACjC,EAAA,CAxDuBD,WAAW;EAAA,QAUjBL,UAAU,EAACD,SAAS;AAAA;AAAAyC,EAAA,GAVdnC,WAAW;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}