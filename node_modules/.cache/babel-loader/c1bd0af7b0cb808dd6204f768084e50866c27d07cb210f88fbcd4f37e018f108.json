{"ast":null,"code":"// src/hooks/db.js\nimport Dexie from \"dexie\";\nexport const db = new Dexie(\"TalentFlowDB\");\n\n// âœ… all stores in one DB\ndb.version(1).stores({\n  assessments: \"++id, title, sections\",\n  jobs: \"++id, title, slug, status\" // ðŸ‘ˆ added jobs table\n});\n\n// âœ… Seed assessments if not present\nexport async function seedIfNeeded() {\n  const count = await db.assessments.count();\n  if (count === 0) {\n    const frontend = {\n      title: \"Assessment 1 â€” Frontend\",\n      sections: [{\n        id: 1,\n        name: \"Section 1 - Frontend\",\n        questions: Array.from({\n          length: 12\n        }, (_, q) => {\n          const i = q + 1;\n          return {\n            id: `f-${i}`,\n            label: `Question ${i} (frontend)`,\n            type: i % 5 === 1 ? \"short\" : i % 5 === 2 ? \"long\" : i % 5 === 3 ? \"numeric\" : i % 5 === 4 ? \"single-choice\" : \"multi-choice\",\n            required: i % 3 === 0,\n            maxLength: i % 5 === 2 ? 250 : undefined,\n            range: i % 5 === 3 ? {\n              min: 0,\n              max: 10\n            } : undefined,\n            options: i % 5 === 4 || i % 5 === 0 ? [\"A\", \"B\", \"C\"] : undefined,\n            condition: {\n              dependsOn: \"\",\n              value: \"\"\n            }\n          };\n        })\n      }]\n    };\n    const backend = {\n      title: \"Assessment 2 â€” Backend\",\n      sections: [{\n        id: 1,\n        name: \"Section 1 - Backend\",\n        questions: Array.from({\n          length: 12\n        }, (_, q) => {\n          const i = q + 1;\n          return {\n            id: `b-${i}`,\n            label: `Question ${i} (backend)`,\n            type: i % 5 === 1 ? \"short\" : i % 5 === 2 ? \"long\" : i % 5 === 3 ? \"numeric\" : i % 5 === 4 ? \"single-choice\" : \"multi-choice\",\n            required: i % 2 === 0,\n            maxLength: i % 5 === 2 ? 300 : undefined,\n            range: i % 5 === 3 ? {\n              min: 1,\n              max: 5\n            } : undefined,\n            options: i % 5 === 4 || i % 5 === 0 ? [\"Yes\", \"No\", \"Maybe\"] : undefined,\n            condition: {\n              dependsOn: \"\",\n              value: \"\"\n            }\n          };\n        })\n      }]\n    };\n    const dbs = {\n      title: \"Assessment 3 â€” Databases\",\n      sections: [{\n        id: 1,\n        name: \"Section 1 - Databases\",\n        questions: Array.from({\n          length: 12\n        }, (_, q) => {\n          const i = q + 1;\n          return {\n            id: `d-${i}`,\n            label: `Question ${i} (db)`,\n            type: i % 5 === 1 ? \"short\" : i % 5 === 2 ? \"long\" : i % 5 === 3 ? \"numeric\" : i % 5 === 4 ? \"single-choice\" : \"multi-choice\",\n            required: false,\n            maxLength: i % 5 === 2 ? 200 : undefined,\n            range: i % 5 === 3 ? {\n              min: 0,\n              max: 20\n            } : undefined,\n            options: i % 5 === 4 || i % 5 === 0 ? [\"Opt1\", \"Opt2\", \"Opt3\"] : undefined,\n            condition: {\n              dependsOn: \"\",\n              value: \"\"\n            }\n          };\n        })\n      }]\n    };\n    await db.assessments.bulkAdd([frontend, backend, dbs]);\n    console.log(\"âœ… Seeded 3 assessments (12 questions each)\");\n  }\n\n  // âœ… seed 25 demo jobs (mixed active/archived)\n  const jobCount = await db.jobs.count();\n  if (jobCount === 0) {\n    const demoJobs = Array.from({\n      length: 25\n    }, (_, i) => ({\n      title: `Job ${i + 1}`,\n      slug: `job-${i + 1}`,\n      status: i % 2 === 0 ? \"active\" : \"archived\" // alternate\n    }));\n    await db.jobs.bulkAdd(demoJobs);\n    console.log(\"âœ… Seeded 25 jobs (mixed active/archived)\");\n  }\n}","map":{"version":3,"names":["Dexie","db","version","stores","assessments","jobs","seedIfNeeded","count","frontend","title","sections","id","name","questions","Array","from","length","_","q","i","label","type","required","maxLength","undefined","range","min","max","options","condition","dependsOn","value","backend","dbs","bulkAdd","console","log","jobCount","demoJobs","slug","status"],"sources":["C:/Users/viren/Trial 2/src/hooks/db.js"],"sourcesContent":["// src/hooks/db.js\r\nimport Dexie from \"dexie\";\r\n\r\nexport const db = new Dexie(\"TalentFlowDB\");\r\n\r\n// âœ… all stores in one DB\r\ndb.version(1).stores({\r\n  assessments: \"++id, title, sections\",\r\n  jobs: \"++id, title, slug, status\", // ðŸ‘ˆ added jobs table\r\n});\r\n\r\n// âœ… Seed assessments if not present\r\nexport async function seedIfNeeded() {\r\n  const count = await db.assessments.count();\r\n  if (count === 0) {\r\n    const frontend = {\r\n      title: \"Assessment 1 â€” Frontend\",\r\n      sections: [\r\n        {\r\n          id: 1,\r\n          name: \"Section 1 - Frontend\",\r\n          questions: Array.from({ length: 12 }, (_, q) => {\r\n            const i = q + 1;\r\n            return {\r\n              id: `f-${i}`,\r\n              label: `Question ${i} (frontend)`,\r\n              type:\r\n                i % 5 === 1\r\n                  ? \"short\"\r\n                  : i % 5 === 2\r\n                  ? \"long\"\r\n                  : i % 5 === 3\r\n                  ? \"numeric\"\r\n                  : i % 5 === 4\r\n                  ? \"single-choice\"\r\n                  : \"multi-choice\",\r\n              required: i % 3 === 0,\r\n              maxLength: i % 5 === 2 ? 250 : undefined,\r\n              range: i % 5 === 3 ? { min: 0, max: 10 } : undefined,\r\n              options:\r\n                i % 5 === 4 || i % 5 === 0 ? [\"A\", \"B\", \"C\"] : undefined,\r\n              condition: { dependsOn: \"\", value: \"\" },\r\n            };\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n\r\n    const backend = {\r\n      title: \"Assessment 2 â€” Backend\",\r\n      sections: [\r\n        {\r\n          id: 1,\r\n          name: \"Section 1 - Backend\",\r\n          questions: Array.from({ length: 12 }, (_, q) => {\r\n            const i = q + 1;\r\n            return {\r\n              id: `b-${i}`,\r\n              label: `Question ${i} (backend)`,\r\n              type:\r\n                i % 5 === 1\r\n                  ? \"short\"\r\n                  : i % 5 === 2\r\n                  ? \"long\"\r\n                  : i % 5 === 3\r\n                  ? \"numeric\"\r\n                  : i % 5 === 4\r\n                  ? \"single-choice\"\r\n                  : \"multi-choice\",\r\n              required: i % 2 === 0,\r\n              maxLength: i % 5 === 2 ? 300 : undefined,\r\n              range: i % 5 === 3 ? { min: 1, max: 5 } : undefined,\r\n              options:\r\n                i % 5 === 4 || i % 5 === 0\r\n                  ? [\"Yes\", \"No\", \"Maybe\"]\r\n                  : undefined,\r\n              condition: { dependsOn: \"\", value: \"\" },\r\n            };\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n\r\n    const dbs = {\r\n      title: \"Assessment 3 â€” Databases\",\r\n      sections: [\r\n        {\r\n          id: 1,\r\n          name: \"Section 1 - Databases\",\r\n          questions: Array.from({ length: 12 }, (_, q) => {\r\n            const i = q + 1;\r\n            return {\r\n              id: `d-${i}`,\r\n              label: `Question ${i} (db)`,\r\n              type:\r\n                i % 5 === 1\r\n                  ? \"short\"\r\n                  : i % 5 === 2\r\n                  ? \"long\"\r\n                  : i % 5 === 3\r\n                  ? \"numeric\"\r\n                  : i % 5 === 4\r\n                  ? \"single-choice\"\r\n                  : \"multi-choice\",\r\n              required: false,\r\n              maxLength: i % 5 === 2 ? 200 : undefined,\r\n              range: i % 5 === 3 ? { min: 0, max: 20 } : undefined,\r\n              options:\r\n                i % 5 === 4 || i % 5 === 0\r\n                  ? [\"Opt1\", \"Opt2\", \"Opt3\"]\r\n                  : undefined,\r\n              condition: { dependsOn: \"\", value: \"\" },\r\n            };\r\n          }),\r\n        },\r\n      ],\r\n    };\r\n\r\n    await db.assessments.bulkAdd([frontend, backend, dbs]);\r\n    console.log(\"âœ… Seeded 3 assessments (12 questions each)\");\r\n  }\r\n\r\n  // âœ… seed 25 demo jobs (mixed active/archived)\r\n  const jobCount = await db.jobs.count();\r\n  if (jobCount === 0) {\r\n    const demoJobs = Array.from({ length: 25 }, (_, i) => ({\r\n      title: `Job ${i + 1}`,\r\n      slug: `job-${i + 1}`,\r\n      status: i % 2 === 0 ? \"active\" : \"archived\", // alternate\r\n    }));\r\n    await db.jobs.bulkAdd(demoJobs);\r\n    console.log(\"âœ… Seeded 25 jobs (mixed active/archived)\");\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}