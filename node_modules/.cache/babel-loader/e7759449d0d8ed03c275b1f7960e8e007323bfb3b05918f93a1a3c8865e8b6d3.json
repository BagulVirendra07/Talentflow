{"ast":null,"code":"import { create } from \"zustand\";\nimport Dexie from \"dexie\";\n\n// Create DB\nexport const db = new Dexie(\"TalentFlowDB\");\ndb.version(1).stores({\n  assessments: \"++id,title,sections\"\n});\nexport const useAssessmentStore = create(set => ({\n  assessments: [],\n  fetchAssessments: async () => {\n    const data = await db.assessments.toArray();\n    set({\n      assessments: data\n    });\n  },\n  addAssessment: async assessment => {\n    const id = await db.assessments.add(assessment);\n    set(state => ({\n      assessments: [...state.assessments, {\n        id,\n        ...assessment\n      }]\n    }));\n  },\n  updateAssessment: async (id, updatedData) => {\n    await db.assessments.update(id, updatedData);\n    set(state => ({\n      assessments: state.assessments.map(a => a.id === id ? {\n        ...a,\n        ...updatedData\n      } : a)\n    }));\n  },\n  deleteAssessment: async id => {\n    await db.assessments.delete(id);\n    set(state => ({\n      assessments: state.assessments.filter(a => a.id !== id)\n    }));\n  }\n}));","map":{"version":3,"names":["create","Dexie","db","version","stores","assessments","useAssessmentStore","set","fetchAssessments","data","toArray","addAssessment","assessment","id","add","state","updateAssessment","updatedData","update","map","a","deleteAssessment","delete","filter"],"sources":["C:/Users/viren/Trial 2/src/components/Assessments/useAssessmentStore.js"],"sourcesContent":["import { create } from \"zustand\";\r\nimport Dexie from \"dexie\";\r\n\r\n// Create DB\r\nexport const db = new Dexie(\"TalentFlowDB\");\r\ndb.version(1).stores({\r\n  assessments: \"++id,title,sections\",\r\n});\r\n\r\nexport const useAssessmentStore = create((set) => ({\r\n  assessments: [],\r\n\r\n  fetchAssessments: async () => {\r\n    const data = await db.assessments.toArray();\r\n    set({ assessments: data });\r\n  },\r\n\r\n  addAssessment: async (assessment) => {\r\n    const id = await db.assessments.add(assessment);\r\n    set((state) => ({\r\n      assessments: [...state.assessments, { id, ...assessment }],\r\n    }));\r\n  },\r\n\r\n  updateAssessment: async (id, updatedData) => {\r\n    await db.assessments.update(id, updatedData);\r\n    set((state) => ({\r\n      assessments: state.assessments.map((a) =>\r\n        a.id === id ? { ...a, ...updatedData } : a\r\n      ),\r\n    }));\r\n  },\r\n\r\n  deleteAssessment: async (id) => {\r\n    await db.assessments.delete(id);\r\n    set((state) => ({\r\n      assessments: state.assessments.filter((a) => a.id !== id),\r\n    }));\r\n  },\r\n}));\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,SAAS;AAChC,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,EAAE,GAAG,IAAID,KAAK,CAAC,cAAc,CAAC;AAC3CC,EAAE,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,MAAM,CAAC;EACnBC,WAAW,EAAE;AACf,CAAC,CAAC;AAEF,OAAO,MAAMC,kBAAkB,GAAGN,MAAM,CAAEO,GAAG,KAAM;EACjDF,WAAW,EAAE,EAAE;EAEfG,gBAAgB,EAAE,MAAAA,CAAA,KAAY;IAC5B,MAAMC,IAAI,GAAG,MAAMP,EAAE,CAACG,WAAW,CAACK,OAAO,CAAC,CAAC;IAC3CH,GAAG,CAAC;MAAEF,WAAW,EAAEI;IAAK,CAAC,CAAC;EAC5B,CAAC;EAEDE,aAAa,EAAE,MAAOC,UAAU,IAAK;IACnC,MAAMC,EAAE,GAAG,MAAMX,EAAE,CAACG,WAAW,CAACS,GAAG,CAACF,UAAU,CAAC;IAC/CL,GAAG,CAAEQ,KAAK,KAAM;MACdV,WAAW,EAAE,CAAC,GAAGU,KAAK,CAACV,WAAW,EAAE;QAAEQ,EAAE;QAAE,GAAGD;MAAW,CAAC;IAC3D,CAAC,CAAC,CAAC;EACL,CAAC;EAEDI,gBAAgB,EAAE,MAAAA,CAAOH,EAAE,EAAEI,WAAW,KAAK;IAC3C,MAAMf,EAAE,CAACG,WAAW,CAACa,MAAM,CAACL,EAAE,EAAEI,WAAW,CAAC;IAC5CV,GAAG,CAAEQ,KAAK,KAAM;MACdV,WAAW,EAAEU,KAAK,CAACV,WAAW,CAACc,GAAG,CAAEC,CAAC,IACnCA,CAAC,CAACP,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGO,CAAC;QAAE,GAAGH;MAAY,CAAC,GAAGG,CAC3C;IACF,CAAC,CAAC,CAAC;EACL,CAAC;EAEDC,gBAAgB,EAAE,MAAOR,EAAE,IAAK;IAC9B,MAAMX,EAAE,CAACG,WAAW,CAACiB,MAAM,CAACT,EAAE,CAAC;IAC/BN,GAAG,CAAEQ,KAAK,KAAM;MACdV,WAAW,EAAEU,KAAK,CAACV,WAAW,CAACkB,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACP,EAAE,KAAKA,EAAE;IAC1D,CAAC,CAAC,CAAC;EACL;AACF,CAAC,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}